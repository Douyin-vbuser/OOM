name: Run Main Method and Publish Release

on:
  schedule:
    - cron: '0 0,2,4,6,7,8,9,10,11,12,13,14,16,22 * * *'  # 每小时的第 0 分钟执行一次（整点执行）
  workflow_dispatch:  # 允许手动触发

jobs:
  run-main:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 授予写入权限

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # 确保后续步骤可以使用相同的认证信息

      # 2. 设置 JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'  # 使用 Eclipse Temurin 的 JDK 8

      # 3. 赋予 gradlew 执行权限
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. 生成时间戳
      - name: Generate timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      # 5. 运行 Gradle 任务，传递时间戳
      - name: Run Main Method
        run: ./gradlew run -PmainClass=com.vbuser.cr.Main -Ptimestamp=$TIMESTAMP

      # 6. 打包数据库文件
      - name: Package database
        run: |
          DB_FOLDER="$TIMESTAMP"
          ZIP_FILE="database_$TIMESTAMP.zip"
          echo "DB_FOLDER: $DB_FOLDER"
          echo "ZIP_FILE: $ZIP_FILE"
          ls -la  # 列出当前目录的文件，用于调试
          zip -r $ZIP_FILE $DB_FOLDER
          ls -la  # 列出生成的文件，确保 ZIP 文件存在

      # 7. 确保 `data` 标签存在
      - name: Ensure 'data' tag exists
        run: |
          git fetch --tags
          if ! git rev-parse -q --verify "refs/tags/data" > /dev/null; then
            git tag data
            git push origin data
          fi

      # 8. 发布 Release 到现有的 `data` 标签
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "data"
          files: database_${{ env.TIMESTAMP }}.zip  # 正确引用环境变量
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}